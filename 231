--// Trident Survival \\--

--[[
 _                                   _           _       _   _
| |__   ___  __ _ _ __ ___   ___  __| |___  ___ | |_   _| |_(_) ___  _ __  ___
| '_ \ / _ \/ _` | '_ ` _ \ / _ \/ _` / __|/ _ \| | | | | __| |/ _ \| '_ \/ __|
| |_) |  __/ (_| | | | | | |  __/ (_| \__ \ (_) | | |_| | |_| | (_) | | | \__ \
|_.__/ \___|\__,_|_| |_| |_|\___|\__,_|___/\___/|_|\__,_|\__|_|\___/|_| |_|___/

]]--

--[[
local last_updated = "17/04/2023"
--]]

local requiredPlaceId = 9570110925
if game.PlaceId ~= requiredPlaceId then
  warn(("This script is intended for use in game with place ID %d, but the current game has place ID %d."):format(requiredPlaceId, game.PlaceId))
  return
end

if not game:IsLoaded() then
  game.Loaded:Wait()
end

--// Rconsole
rconsoleprint("[*]: System Alert: beamed.xyz has been injected.\27[0m\n")

------------------------------------------------------------------------------------

--// locals Shit
local Decimals = 2
local Clock = os.clock()
local Camera = game:GetService("Workspace").Camera
local workspace = game:GetService("Workspace")
local userinputservice = game:GetService("UserInputService")
local UserInputService = game:GetService("UserInputService")
local runservice = game:GetService("RunService")
local MouseLocation  = game:GetService("UserInputService"):GetMouseLocation()
local Players = game.Players
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = game:GetService("Workspace").CurrentCamera
local Mouse = LocalPlayer:GetMouse()
local worldToViewportPoint = CurrentCamera.worldToViewportPoint
local UIS = game:GetService("UserInputService")
local vector3_new, vector2_new = Vector3.new, Vector2.new

--// UI
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Library.lua'))()
local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/SaveManager.lua'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Theme.lua'))()

------------------------------------------------------------------------------------

--// Player Notifications
local notifyPlayerChange = function(player, message, color)
local prefix = player:IsFriendsWith(game.Players.LocalPlayer.UserId) and "Notification - Friend" or "Notification - Player"
Library:Notify(("%s | User: %s | %s"):format(prefix, player.DisplayName, message), prefix == "Notification - Friend" and 6 or 3, color)
end

game.Players.PlayerAdded:Connect(function(player)
notifyPlayerChange(player, "joined", Color3.fromRGB(0, 255, 0))
end)

game.Players.PlayerRemoving:Connect(function(player)
notifyPlayerChange(player, "left", Color3.fromRGB(255, 0, 0))
end)

--// Create UI

local Version = "Free"
local Build = "Free"
local Color = "#00FF00"

if Build == "Testing" then
Color = '#0000FF'
Ver = "1.1"
elseif Build == "Free" then
Color = '#00FF00'
Ver = "1.1"
elseif Build == "Lite" then
Color = '#0000FF'
Ver = "1.1"
elseif Build == "Premium" then
Color = '#FFFF00'
Ver = "1.1"
elseif Build == "Dev" then
Color = '#FF0000'
Ver = "1.0.2"
end

local Window = Library:CreateWindow({ Size = UDim2.fromOffset(550, 610),
Title = "beamed.<font color=\"#d17bff\">solutions</font> | ".."<font color=\""..Color.."\">"..Build.."</font>".."                                      [v"..Ver.."]",
Center = true,
AutoShow = true,
})

local Tabs = {
CombatTab = Window:AddTab('Combat'),
VisualsTab = Window:AddTab('Visuals'),
UISettings = Window:AddTab('UI Settings'),
}

--* Chams *--

local ESP = false
local FillColor1 = Color3.fromRGB(255, 0, 0)
local OutlineColor1 = Color3.fromRGB(255, 255, 255)
local FillTransparency = 0.7
local OutlineTransparency = 0

local highlightTable = {}
local ignoreList = {game:GetService("Workspace").Ignore.FPSArms}

local selectedDepthMode = "AlwaysOnTop"

function updateChams()
for child, highlight in pairs(highlightTable) do
local humanoidRootPart = child:FindFirstChild("HumanoidRootPart")
if not humanoidRootPart or humanoidRootPart.Parent ~= child or table.find(ignoreList, child) then
  highlight:Destroy()
  highlightTable[child] = nil
elseif ESP and humanoidRootPart and highlight.FillColor ~= FillColor1 then
  highlight.FillColor = FillColor1
end
end
for _, child in pairs(workspace:GetChildren()) do
if child:FindFirstChild("HumanoidRootPart") and not highlightTable[child] and not table.find(ignoreList, child) then
  local highlight = Instance.new("Highlight", child)
  highlight.Adornee = child
  highlight.Name = "Chams"
  highlight.FillTransparency = FillTransparency
  highlight.OutlineTransparency = OutlineTransparency
  highlight.FillColor = FillColor1
  highlight.OutlineColor = OutlineColor1
  highlight.DepthMode = selectedDepthMode
  highlightTable[child] = highlight
end
end
end

--------------------------------------------------------------------------------------------------
--// Combat \\--

--
local AimlockTabBox = Tabs.CombatTab:AddLeftTabbox('Aimbot')
local AimlockTab = AimlockTabBox:AddTab('Aimbot')

--* Aimbot *--

local EnabledTarget = false

local fovcircle2, fovcircleoutline = Drawing.new("Circle"), Drawing.new("Circle")
--
fovcircle2.Thickness = 1
fovcircle2.ZIndex = 3
fovcircle2.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
--
fovcircleoutline.Thickness = 3
fovcircleoutline.ZIndex = 2
fovcircleoutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

local function viewportPoint(ret, ...)
if type(ret) == "boolean" then
local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(...)
return pos
else
return workspace.CurrentCamera:WorldToViewportPoint(ret, ...)
end
end

local function GetPlayer()
local last_distance = math.huge
local target = nil
for i, v in pairs(workspace:GetChildren()) do
if v:IsA("Model") and v.Name ~= "Player"  then
  if v.PrimaryPart ~= nil and v:FindFirstChild("Head") then
    local sp, visible = viewportPoint(v:WaitForChild("HumanoidRootPart", math.huge).Position)
    local mouse_loc = UIS:GetMouseLocation()
    local distance = (Vector2.new(mouse_loc.X, mouse_loc.Y) - Vector2.new(sp.X, sp.Y)).Magnitude
    local pos = Camera.WorldToViewportPoint(Camera, v.PrimaryPart.Position)
    if distance < last_distance and distance < fovcircle2.Radius then
      last_distance = distance
      target = v--// Trident Survival \\--

      --[[
       _                                   _           _       _   _
      | |__   ___  __ _ _ __ ___   ___  __| |___  ___ | |_   _| |_(_) ___  _ __  ___
      | '_ \ / _ \/ _` | '_ ` _ \ / _ \/ _` / __|/ _ \| | | | | __| |/ _ \| '_ \/ __|
      | |_) |  __/ (_| | | | | | |  __/ (_| \__ \ (_) | | |_| | |_| | (_) | | | \__ \
      |_.__/ \___|\__,_|_| |_| |_|\___|\__,_|___/\___/|_|\__,_|\__|_|\___/|_| |_|___/
      
      ]]--
      
      --[[
      local last_updated = "17/04/2023"
      --]]
      
      local requiredPlaceId = 9570110925
      if game.PlaceId ~= requiredPlaceId then
        warn(("This script is intended for use in game with place ID %d, but the current game has place ID %d."):format(requiredPlaceId, game.PlaceId))
        return
      end
      
      if not game:IsLoaded() then
        game.Loaded:Wait()
      end
      
      --// Rconsole
      rconsoleprint("[*]: System Alert: beamed.xyz has been injected.\27[0m\n")
      
      ------------------------------------------------------------------------------------
      
      --// locals Shit
      local Decimals = 2
      local Clock = os.clock()
      local Camera = game:GetService("Workspace").Camera
      local workspace = game:GetService("Workspace")
      local userinputservice = game:GetService("UserInputService")
      local UserInputService = game:GetService("UserInputService")
      local runservice = game:GetService("RunService")
      local MouseLocation  = game:GetService("UserInputService"):GetMouseLocation()
      local Players = game.Players
      local LocalPlayer = Players.LocalPlayer
      local CurrentCamera = game:GetService("Workspace").CurrentCamera
      local Mouse = LocalPlayer:GetMouse()
      local worldToViewportPoint = CurrentCamera.worldToViewportPoint
      local UIS = game:GetService("UserInputService")
      local vector3_new, vector2_new = Vector3.new, Vector2.new
      
      --// UI
      local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Library.lua'))()
      local SaveManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/addons/SaveManager.lua'))()
      local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/BigHacker123/Library.lua/main/Theme.lua'))()
      
      ------------------------------------------------------------------------------------
      
      --// Player Notifications
      local notifyPlayerChange = function(player, message, color)
      local prefix = player:IsFriendsWith(game.Players.LocalPlayer.UserId) and "Notification - Friend" or "Notification - Player"
      Library:Notify(("%s | User: %s | %s"):format(prefix, player.DisplayName, message), prefix == "Notification - Friend" and 6 or 3, color)
      end
      
      game.Players.PlayerAdded:Connect(function(player)
      notifyPlayerChange(player, "joined", Color3.fromRGB(0, 255, 0))
      end)
      
      game.Players.PlayerRemoving:Connect(function(player)
      notifyPlayerChange(player, "left", Color3.fromRGB(255, 0, 0))
      end)
      
      --// Create UI
      
      local Version = "Free"
      local Build = "Free"
      local Color = "#00FF00"
      
      if Build == "Testing" then
      Color = '#0000FF'
      Ver = "1.1"
      elseif Build == "Free" then
      Color = '#00FF00'
      Ver = "1.1"
      elseif Build == "Lite" then
      Color = '#0000FF'
      Ver = "1.1"
      elseif Build == "Premium" then
      Color = '#FFFF00'
      Ver = "1.1"
      elseif Build == "Dev" then
      Color = '#FF0000'
      Ver = "1.0.2"
      end
      
      local Window = Library:CreateWindow({ Size = UDim2.fromOffset(550, 610),
      Title = "beamed.<font color=\"#d17bff\">solutions</font> | ".."<font color=\""..Color.."\">"..Build.."</font>".."                                      [v"..Ver.."]",
      Center = true,
      AutoShow = true,
      })
      
      local Tabs = {
      CombatTab = Window:AddTab('Combat'),
      VisualsTab = Window:AddTab('Visuals'),
      UISettings = Window:AddTab('UI Settings'),
      }
      
      --* Chams *--
      
      local ESP = false
      local FillColor1 = Color3.fromRGB(255, 0, 0)
      local OutlineColor1 = Color3.fromRGB(255, 255, 255)
      local FillTransparency = 0.7
      local OutlineTransparency = 0
      
      local highlightTable = {}
      local ignoreList = {game:GetService("Workspace").Ignore.FPSArms}
      
      local selectedDepthMode = "AlwaysOnTop"
      
      function updateChams()
      for child, highlight in pairs(highlightTable) do
      local humanoidRootPart = child:FindFirstChild("HumanoidRootPart")
      if not humanoidRootPart or humanoidRootPart.Parent ~= child or table.find(ignoreList, child) then
        highlight:Destroy()
        highlightTable[child] = nil
      elseif ESP and humanoidRootPart and highlight.FillColor ~= FillColor1 then
        highlight.FillColor = FillColor1
      end
      end
      for _, child in pairs(workspace:GetChildren()) do
      if child:FindFirstChild("HumanoidRootPart") and not highlightTable[child] and not table.find(ignoreList, child) then
        local highlight = Instance.new("Highlight", child)
        highlight.Adornee = child
        highlight.Name = "Chams"
        highlight.FillTransparency = FillTransparency
        highlight.OutlineTransparency = OutlineTransparency
        highlight.FillColor = FillColor1
        highlight.OutlineColor = OutlineColor1
        highlight.DepthMode = selectedDepthMode
        highlightTable[child] = highlight
      end
      end
      end
      
      --------------------------------------------------------------------------------------------------
      --// Combat \\--
      
      --
      local AimlockTabBox = Tabs.CombatTab:AddLeftTabbox('Aimbot')
      local AimlockTab = AimlockTabBox:AddTab('Aimbot')
      
      --* Aimbot *--
      
      local EnabledTarget = false
      
      local fovcircle2, fovcircleoutline = Drawing.new("Circle"), Drawing.new("Circle")
      --
      fovcircle2.Thickness = 1
      fovcircle2.ZIndex = 3
      fovcircle2.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      --
      fovcircleoutline.Thickness = 3
      fovcircleoutline.ZIndex = 2
      fovcircleoutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      
      local function viewportPoint(ret, ...)
      if type(ret) == "boolean" then
      local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(...)
      return pos
      else
      return workspace.CurrentCamera:WorldToViewportPoint(ret, ...)
      end
      end
      
      local function GetPlayer()
      local last_distance = math.huge
      local target = nil
      for i, v in pairs(workspace:GetChildren()) do
      if v:IsA("Model") and v.Name ~= "Player"  then
        if v.PrimaryPart ~= nil and v:FindFirstChild("Head") then
          local sp, visible = viewportPoint(v:WaitForChild("HumanoidRootPart", math.huge).Position)
          local mouse_loc = UIS:GetMouseLocation()
          local distance = (Vector2.new(mouse_loc.X, mouse_loc.Y) - Vector2.new(sp.X, sp.Y)).Magnitude
          local pos = Camera.WorldToViewportPoint(Camera, v.PrimaryPart.Position)
          if distance < last_distance and distance < fovcircle2.Radius then
            last_distance = distance
            target = v
            EnabledTarget = true
          else
            EnabledTarget = false
          end
        end
      end
      end
      return target
      end
      
      local Sensitivity = 1
      local LoopBad = nil
      MovementPrediction = true
      local AimbotSensitivity = 1
      local Mouse = game.Players.LocalPlayer:GetMouse()
      
      local function AimToPosition(Position)
      local AimX = ((Position.X - Mouse.X) + 0) / AimbotSensitivity
      local AimY = ((Position.Y - Mouse.Y - 36) + 0) / AimbotSensitivity
      return AimX, AimY
      end
      
      local AimbotEnabled = false
      local Key = Enum.UserInputType.MouseButton2
      local OldPosition = nil
      
      local function CalculateVelocity(Before, After, deltaTime)
      local Displacement = (After - Before)
      local Velocity = Displacement / deltaTime
      return Velocity
      end
      
      local function viewportPoint(ret, ...)
      if type(ret) == "boolean" then
      local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(...)
      return pos
      else
      return workspace.CurrentCamera:WorldToViewportPoint(ret, ...)
      end
      end
      
      local PredictionSmoothness = 2
      local BoostAim = UIS.MouseDeltaSensitivity
      local DefaultUIS = UIS.MouseDeltaSensitivity
      local Middle = game.Workspace.Ignore.LocalCharacter.Middle
      
      UIS.InputBegan:Connect(function(input, gameProcessedEvent)
      if input.UserInputType == Key then
      Aiming = true
      LoopBad = runservice.RenderStepped:Connect(function(dt)
      if Aiming and AimbotEnabled == true then
      local p = nil
      if not TargetRN then
        p = GetPlayer()
        if p then
          TargetRN = p
        end
      else
        p = TargetRN
      end
      if not p then return end
      if p ~= nil then
        UIS.MouseDeltaSensitivity = BoostAim
        local CurrentPosition = p.HumanoidRootPart.Position
        if OldPosition == nil then
          OldPosition = CurrentPosition
        end
      
        local Velocity = CalculateVelocity(OldPosition,CurrentPosition,dt)
        local Prediction = Vector3.new(0, 0, 0)
        if MovementPrediction == true then
          if Options.MyDropdown.Value == "Head" then
            Prediction = Velocity * (PredictionSmoothness / 10) * (Middle.Position - p.Head.Position).magnitude / 100
          end
          if Options.MyDropdown.Value == "Torso" then
            Prediction = Velocity * (PredictionSmoothness / 10) * (Middle.Position - p.Torso.Position).magnitude / 100
          end
          if Options.MyDropdown.Value == "HumanoidRootPart" then
            Prediction = Velocity * (PredictionSmoothness / 10) * (Middle.Position - p.HumanoidRootPart.Position).magnitude / 100
          end
        end
      
        OldPosition = CurrentPosition
      
        if Options.MyDropdown.Value == "Head" then
          local AimAt = Camera:WorldToViewportPoint(p.Head.Position + Prediction)
          mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
        end
        if Options.MyDropdown.Value == "Torso" then
          AimAt = Camera:WorldToViewportPoint(p.Torso.Position + Prediction)
          mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
        end
        if Options.MyDropdown.Value == "HumanoidRootPart" then
          AimAt = Camera:WorldToViewportPoint(p.HumanoidRootPart.Position + Prediction)
          mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
        end
      end
      end
      end)
      end
      end)
      
      local OldDelta = UIS.MouseDeltaSensitivity
      
      UIS.InputEnded:Connect(function(input, gameProcessedEvent)
      if input.UserInputType == Key then
      Aiming = false
      UIS.MouseDeltaSensitivity = OldDelta
      OldPosition = nil
      local success, errormessage = pcall(function()
      LoopBad:Disconnect()
      end)
      if not success then
      warn(errormessage)
      end
      UIS.MouseDeltaSensitivity = DefaultUIS
      TargetRN = nil
      end
      end)
      
      AimlockTab:AddToggle('Enabledaz69', {Text = 'Enabled', Default = false}):AddKeyPicker('KeyPicker69', {Default = 'MB2', SyncToggleState = false, Mode = 'Hold', Text = 'Aimbot', NoUI = false,}):OnChanged(function(x)
      AimbotEnabled = x
      end)
      
      AimlockTab:AddSlider('AimlockSmoothness_Slider', {Text = 'Smoothness', Suffix = "%", Default = 1, Min = 0.1, Max = 10, Rounding = 1, Compact = true}):OnChanged(function(aimbotsmoothnesvalue)
      AimbotSensitivity = aimbotsmoothnesvalue
      end)
      
      AimlockTab:AddToggle('Prediction', {Text = 'Prediction', Default = false})
      Toggles.Prediction:OnChanged(function(BingChillin)
      MovementPrediction = BingChillin
      end)
      
      AimlockTab:AddSlider('Predictions', {Text = 'Prediction', Suffix = "%", Default = 1.5, Min = 0, Max = 5, Rounding = 1, Compact = true})
      Options.Predictions:OnChanged(function(BingChillin)
      PredictionSmoothness = BingChillin
      end)
      
      AimlockTab:AddDropdown('MyDropdown', {Values = { 'Head','Torso','HumanoidRootPart' }, Default = 1, Multi = false, Text = 'Aimpart'})
      
      --
      local VisualsTabBox = Tabs.CombatTab:AddRightTabbox('Fov Circle')
      local FovCircleTab = VisualsTabBox:AddTab('Fov Circle')
      
      --* Fov Circle *--
      
      FovCircleTab:AddToggle('FovCirlce_Toggle', {Text = 'Enabled', Default = false}):AddColorPicker("DrawFov_Color", {Default = Color3.fromRGB(255,255,255)}):AddColorPicker("DrawOutlineFov_Color", {Default = Color3.fromRGB(1,1,1)}):OnChanged(function(FovCircle_Toggle)
      fovcircle2.Visible = FovCircle_Toggle
      fovcircleoutline.Visible = FovCircle_Toggle
      end)
      
      Options.DrawFov_Color:OnChanged(function(fovcolorvalue)
      fovcircle2.Color = fovcolorvalue
      end)
      
      Options.DrawOutlineFov_Color:OnChanged(function(outlinefovcolorvalue)
      fovcircleoutline.Color = outlinefovcolorvalue
      end)
      
      FovCircleTab:AddToggle('rainbow_FovCircle', {Text = 'Rainbow', Default = false}):OnChanged(function(FovCircle_Rainbow)
      if FovCircle_Rainbow == true then
      game:GetService('RunService'):BindToRenderStep("Rainbow", 0 , function()
      fovcircle2.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
      end)
      elseif FovCircle_Rainbow == false then
      game:GetService('RunService'):UnbindFromRenderStep("Rainbow")
      fovcircle2.Color = Color3.fromRGB(255,255,255)
      end
      end)
      
      FovCircleTab:AddToggle('FovCircleFilled_Toggle', {Text = 'Filled', Default = false}):OnChanged(function(FovCircleFilled_Toggle)
      fovcircle2.Filled = FovCircleFilled_Toggle
      end)
      
      FovCircleTab:AddSlider('FovCircleRadius_Value', {Text = 'Radius', Suffix = "°", Default = 120, Min = 0, Max = 750, Rounding = 0, Compact = true,}):OnChanged(function(FovCircleRadius_Value)
      fovcircle2.Radius = FovCircleRadius_Value
      fovcircleoutline.Radius = FovCircleRadius_Value
      end)
      
      FovCircleTab:AddSlider('FovCircleNumSides_Value', {Text = 'NumSides', Suffix = "px", Default = 64, Min = 1, Max = 64, Rounding = 0, Compact = true,}):OnChanged(function(FovCircleNumSides_Value)
      fovcircle2.NumSides = FovCircleNumSides_Value
      fovcircleoutline.NumSides = FovCircleNumSides_Value
      end)
      
      FovCircleTab:AddSlider('FovCircleTransparency_Value', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true,}):OnChanged(function(FovCircleTransparency_Value)
      fovcircle2.Transparency = FovCircleTransparency_Value
      fovcircleoutline.Transparency = FovCircleTransparency_Value
      end)
      
      local inputConnection
      
      FovCircleTab:AddDropdown('FovCircle_Positon', {Values = { 'To Screen', 'To Mouse', 'To Weapon' }, Default = 1, Multi = false, Text = 'Position'}):OnChanged(function(bool)
      if inputConnection then
      inputConnection:Disconnect()
      end
      if bool == "To Screen" then
      fovcircle2.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      fovcircleoutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      elseif bool == "To Mouse" then
      inputConnection = UserInputService.InputChanged:Connect(function(input)
      if input.UserInputType == Enum.UserInputType.MouseMovement then
      local mousePosition = input.Position
      local fovOffset = Vector2.new(0, 36) -- adjust the offset as needed
      fovcircle2.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
      fovcircleoutline.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
      elseif bool == "To Weapon" then
      -- Weapon goes here
      end
      end)
      end
      end)
      
      --
      local VisualsTabBox = Tabs.CombatTab:AddLeftTabbox('Crosshair')
      local CrosshairXTab = VisualsTabBox:AddTab('Crosshair')
      
      --* Crosshair *--
      
      local CrossHairX, CrossHairXOutline = Drawing.new("Circle"), Drawing.new("Circle")
      --
      CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      CrossHairX.Thickness = 1
      CrossHairX.ZIndex = 3
      --
      CrossHairXOutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      CrossHairXOutline.Thickness = 4
      CrossHairXOutline.ZIndex = 2
      
      do
      CrosshairXTab:AddToggle('zCrosshairX_Toggle', {Text = 'Enabled', Default = false}):AddColorPicker("eCrosshairX_Color", {Default = Color3.fromRGB(98, 37, 209)}):AddColorPicker("CrosshairX_OutlineColor", {Default = Color3.fromRGB(0, 0, 0)}):OnChanged(function()
      CrossHairX.Visible = Toggles.zCrosshairX_Toggle.Value
      CrossHairXOutline.Visible = Toggles.zCrosshairX_Toggle.Value
      end)
      
      Options.eCrosshairX_Color:OnChanged(function()
      CrossHairX.Color = Options.eCrosshairX_Color.Value
      end)
      
      Options.CrosshairX_OutlineColor:OnChanged(function()
      CrossHairXOutline.Color = Options.CrosshairX_OutlineColor.Value
      end)
      
      CrosshairXTab:AddToggle('Rainbow_Crosshair1', {Text = 'Rainbow', Default = false}):OnChanged(function(rbcrosshair1)
      if rbcrosshair1 == true then
      game:GetService('RunService'):BindToRenderStep("Rainbow2", 0 , function()
      local success, err = pcall(function()
      CrossHairX.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
      end)
      end)
      elseif rbcrosshair1 == false then
      game:GetService('RunService'):UnbindFromRenderStep("Rainbow2")
      CrossHairX.Color = Color3.fromRGB(98, 37, 209)
      end
      end)
      
      CrosshairXTab:AddToggle('Crosshair_Filled1', {Text = 'Filled', Default = false}):OnChanged(function()
      CrossHairX.Filled = Toggles.Crosshair_Filled1.Value
      end)
      
      CrosshairXTab:AddSlider('Crosshair_Radius', {Text = 'Size', Suffix = "°", Default = 2, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXRadius)
      CrossHairX.Radius = CrosshairXRadius
      CrossHairXOutline.Radius = CrosshairXRadius
      end)
      
      CrosshairXTab:AddSlider('Crosshair_NumSides', {Text = 'NumSides', Suffix = "px", Default = 32, Min = 1, Max = 64, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXNumSides)
      CrossHairX.NumSides = CrosshairXNumSides
      CrossHairXOutline.NumSides = CrosshairXNumSides
      end)
      
      CrosshairXTab:AddSlider('Crosshair_Transparency1', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function()
      CrossHairX.Transparency = Options.Crosshair_Transparency1.Value
      CrossHairXOutline.Transparency = Options.Crosshair_Transparency1.Value
      end)
      end
      
      local inputConnection1
      
      CrosshairXTab:AddDropdown('Crosshair_Positon', {Values = { 'To Screen', 'To Mouse', 'To Weapon' }, Default = 1, Multi = false, Text = 'Position'}):OnChanged(function(bool2)
      if inputConnection1 then
      inputConnection1:Disconnect()
      end
      if bool2 == "To Screen" then
      CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      CrossHairXOutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
      elseif bool2 == "To Mouse" then
      inputConnection1 = UserInputService.InputChanged:Connect(function(input)
      if input.UserInputType == Enum.UserInputType.MouseMovement then
      local mousePosition = input.Position
      local fovOffset = Vector2.new(0, 36) -- adjust the offset as needed
      CrossHairX.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
      CrossHairXOutline.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
      elseif bool2 == "To Weapon" then
      -- Weapon goes here
      end
      end)
      end
      end)
      
      --
      local ComExtraTabBox = Tabs.CombatTab:AddRightTabbox('Extra')
      local ComExtraTab = ComExtraTabBox:AddTab('Extra')
      
      --* Combat Extra *--
      
      ComExtraTab:AddToggle('GameCrosshair_Value', {Text = 'In-Game Crosshair', Default = true}):AddColorPicker("GameCrosshair_Color", {Default = Color3.fromRGB(255,255,255)}):OnChanged(function(GameCrosshair)
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Crosshair.Visible = GameCrosshair
      end)
      
      Options.GameCrosshair_Color:OnChanged(function(CrosshairColor_Value)
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Crosshair.BackgroundColor3 = CrosshairColor_Value
      end)
      
      ComExtraTab:AddToggle('BloodSplatter', {Text = 'Blood Splatter', Default = true}):OnChanged(function(BloodSplatter_Toggle)
      game:GetService("Players").LocalPlayer.PlayerGui.UI.BloodSplatter.Visible = BloodSplatter_Toggle
      end)
      
      local SetSwaySpeed = getrenv()._G.NEXT.SetSwaySpeed
      local old
      local hook = function(self, ...)
      local args = {...}
      if ComExtraTab:GetToggle('LOPA') then
      return 0
      else
      return 1.2
      end
      end
      
      old = hookfunction(SetSwaySpeed, hook)
      
      ComExtraTab:AddToggle('LOPA', {Text = "No Sway", Default = false, Tooltip = "Removes sway from Character"}):OnChanged(function(b)
      if b then
      old = hookfunction(SetSwaySpeed, function() return 0 end)
      else
      hookfunction(SetSwaySpeed, old)
      end
      end)
      
      ComExtraTab:AddLabel('Loot All'):AddKeyPicker('gakb', { Default = 'F', SyncToggleState = false, Mode = 'Toggle', Text = 'Loot All', NoUI = false })
      Options.gakb:OnClick(function()
      for i = 1, 20 do
      wait(0.05)
      local ohNumber1 = 12
      local ohNumber2 = i
      local ohBoolean3 = true
      game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
      end
      end)
      
      --------------------------------------------------------------------------------------------------
      --// Visuals \\--
      
      --
      local VisualsTabBox = Tabs.VisualsTab:AddLeftTabbox('Player Visuals')
      local PlayerESPTab = VisualsTabBox:AddTab('Enemies')
      
      local Config = {
      Esp = {
      Enabled           = false,
      MaxDistance       = 1000,
      Names             = false,
      NamesOutline      = false,
      NamesColor        = Color3.fromRGB(255,255,255),
      NamesOutlineColor = Color3.fromRGB(0,0,0),
      NamesFont         = 2, -- 0,1,2,3
      NamesSize         = 11,
      Distance          = false,
      DistanceOutline   = false,
      DistanceColor     = Color3.fromRGB(255,255,255),
      DistanceSize      = 11,
      DistanceFont      = 2, -- 0,1,2,3
      },
      }
      local c = workspace.CurrentCamera
      local function getdistancefc(part)
      return (part.Position - c.CFrame.Position).Magnitude
      end
      
      function CreateEsp(Player)
      local Name,Distance = Drawing.new("Text"),Drawing.new("Text")
      local Updater = game:GetService("RunService").RenderStepped:Connect(function()
      --
      if Aiming and TargetRN and Player:FindFirstChild("Head") and TargetRN:FindFirstChild("Head") then
      local playerHeadPos = Player.Head.Position
      local targetHeadPos = TargetRN.Head.Position
      if playerHeadPos and targetHeadPos and playerHeadPos == targetHeadPos then
      if Player:FindFirstChild("Chams") then
        Player.Chams.OutlineColor = Color3.fromRGB(255,0,0)
      end
      end
      else
      if Player:FindFirstChild("Chams") then
      Player.Chams.OutlineColor = OutlineColor1
      end
      end
      --
      if Player:FindFirstChild("Chams") then
      if Player.Head.Rotation == Vector3.new(0, 0, -75) or Player.Head.Rotation == Vector3.new(0, 0, 45) or Player.Head.Rotation == Vector3.new(0, 0, -120) then
      Player.Chams:Destroy()
      end
      end
      --
      if Config.Esp.Enabled and Player ~= nil and Player:FindFirstChild("HumanoidRootPart") ~= nil and Player:FindFirstChild("Head") ~= nil then
      local Target2dPosition,IsVisible = workspace.CurrentCamera:WorldToViewportPoint(Player.HumanoidRootPart.Position)
      local scale_factor = 1 / (Target2dPosition.Z * math.tan(math.rad(workspace.CurrentCamera.FieldOfView * 0.5)) * 2) * 100
      local width, height = math.floor(40 * scale_factor), math.floor(60 * scale_factor)
      if Config.Esp.Names then
      if Player.Head.Rotation == Vector3.new(0, 0, -75) or Player.Head.Rotation == Vector3.new(0, 0, 45) or Player.Head.Rotation == Vector3.new(0, 0, -120) then
        Name.Visible = IsVisible
        Name.Text = 'Sleeper ['..tostring(math.floor(getdistancefc(Player.HumanoidRootPart)))..']'
        Name.Center = true
        Name.Outline = Config.Esp.NamesOutline
        Name.OutlineColor = Config.Esp.NamesOutlineColor
        Name.Color = Config.Esp.NamesColor
        Name.Position = Vector2.new(Target2dPosition.X,Target2dPosition.Y - height * 0.5 + -15)
        Name.Font = Config.Esp.NamesFont
        Name.Size = Config.Esp.NamesSize
      else
        Name.Visible = IsVisible
        Name.Text = "Player"
        Name.Center = true
        Name.Outline = Config.Esp.NamesOutline
        Name.OutlineColor = Config.Esp.NamesOutlineColor
        Name.Position = Vector2.new(Target2dPosition.X,Target2dPosition.Y - height * 0.5 + -15)
        Name.Font = Config.Esp.NamesFont
        Name.Size = Config.Esp.NamesSize
        if Aiming and TargetRN ~= nil then
          if Player:FindFirstChild("Head").Position == TargetRN:FindFirstChild("Head").Position and TargetRN:FindFirstChild("Head").Position ~= nil and Player:FindFirstChild("Head").Position ~= nil then
            Name.Color = Color3.fromRGB(255,0,0)
          end
        else
          Name.Color = Config.Esp.NamesColor
        end
      end
      else
      Name.Visible = false
      end
      if Config.Esp.Distance then
      if Player.Head.Rotation == Vector3.new(0, 0, -75) or Player.Head.Rotation == Vector3.new(0, 0, 45) or Player.Head.Rotation == Vector3.new(0, 0, -120) then
        Distance.Visible = false
      else
        Distance.Visible = IsVisible
        Distance.Center = true
        Distance.Outline = Config.Esp.DistanceOutline
        Distance.Font = Config.Esp.DistanceFont
        Distance.Size = Config.Esp.DistanceSize
        Distance.Position = Vector2.new(Target2dPosition.X, Target2dPosition.Y + height / 2 + 5)
        Distance.Text = '['..tostring(math.floor(getdistancefc(Player.HumanoidRootPart)))..']'
        if Aiming and TargetRN ~= nil then
          if Player:FindFirstChild("Head").Position == TargetRN:FindFirstChild("Head").Position and TargetRN:FindFirstChild("Head").Position ~= nil and Player:FindFirstChild("Head").Position ~= nil then
            Distance.Color = Color3.fromRGB(255,0,0)
          end
        else
          Distance.Color = Config.Esp.DistanceColor
        end
      end
      else
      Distance.Visible = false
      end
      else
      Name.Visible = false
      Distance.Visible = false
      if not Player then
      Name:Remove()
      Distance:Remove()
      Updater:Disconnect()
      end
      end
      end)
      end
      
      for _,i in pairs(game:GetService("Workspace"):GetChildren()) do
      if i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i.Head:FindFirstChild("Nametag") then
      CreateEsp(i)
      end
      end
      
      game.Workspace.DescendantAdded:Connect(function(i)
      if i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i.Head:FindFirstChild("Nametag") then
      CreateEsp(i)
      end
      end)
      
      --* Enemies, Settings (ESP) *--
      
      PlayerESPTab:AddToggle('Enabled69', {Text = 'Enabled', Default = false}):OnChanged(function(EnabledEsp)
      Config.Esp.Enabled = EnabledEsp
      end)
      
      PlayerESPTab:AddSlider('Esp_Distancce', {Text = 'Distance', Suffix = " studs", Default = 1000, Min = 0, Max = 10000, Rounding = 0, Compact = true}):OnChanged(function(maxdistancevalue)
      end)
      
      --* Player *--
      
      PlayerESPTab:AddToggle('t2ta22', {Text = 'Player',Default = false,Tooltip = 'Finds Players', }):AddColorPicker('NameColor', {Default = Color3.new(1,1,1),Title = 'Color',}):OnChanged(function(ESPVALUE)
      Config.Esp.Names = ESPVALUE
      end)
      Options.NameColor:OnChanged(function(Color1)
      Config.Esp.NamesColor = Color1
      end)
      
      PlayerESPTab:AddToggle('t2a1ta22', {Text = 'Distance',Default = false,Tooltip = 'Distance', }):AddColorPicker('DistanceColor', {Default = Color3.new(1,1,1),Title = 'Color',}):OnChanged(function(ESPVALUE)
      Config.Esp.Distance = ESPVALUE
      end)
      Options.DistanceColor:OnChanged(function(Color69)
      Config.Esp.DistanceColor = Color69
      end)
      
      PlayerESPTab:AddDivider()
      
      --// Settings \\--
      
      PlayerESPTab:AddToggle('rainbow_esp', {Text = 'Rainbow', Default = false}):OnChanged(function(xpoo12)
      if xpoo12 == true then
      game:GetService('RunService'):BindToRenderStep("Rainbow", 0 , function()
      Config.Esp.NamesColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
      Config.Esp.DistanceColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
      end)
      elseif xpoo12 == false then
      game:GetService('RunService'):UnbindFromRenderStep("Rainbow")
      Config.Esp.NamesColor = Color3.fromRGB(255,255,255)
      Config.Esp.DistanceColor = Color3.fromRGB(255,255,255)
      end
      end)
      
      PlayerESPTab:AddToggle('Outlines', {Text = 'Outlines', Default = true}):OnChanged(function(xpoo12)
      Config.Esp.NamesOutline = xpoo12
      Config.Esp.DistanceOutline = xpoo12
      end)
      
      PlayerESPTab:AddSlider('TextSize', {Text = 'Text Size', Suffix = "px", Default = 11, Min = 1, Max = 25, Rounding = 0, Compact = true}):OnChanged(function(namesizevalue)
      Config.Esp.NamesSize = namesizevalue
      Config.Esp.DistanceSize = namesizevalue
      end)
      
      PlayerESPTab:AddDropdown('Font', {Values = { 'UI', 'System', 'Plex', 'Monospace' }, Default = 3, Multi = false, Text = 'Text Fonts:'}):OnChanged(function(bool62)
      if bool62 == "UI" then
      Config.Esp.NamesFont = 0
      Config.Esp.DistanceFont = 0
      elseif bool62 == "System" then
      Config.Esp.NamesFont = 1
      Config.Esp.DistanceFont = 1
      elseif bool62 == "Plex" then
      Config.Esp.NamesFont = 2
      Config.Esp.DistanceFont = 2
      elseif bool62 == "Monospace" then
      Config.Esp.NamesFont = 3
      Config.Esp.DistanceFont = 3
      end
      end)
      
      --
      local ChamsTabBox = Tabs.VisualsTab:AddRightTabbox('Chams')
      local ChamsTab = ChamsTabBox:AddTab('Chams')
      
      --* Chams *--
      
      game.Players.PlayerAdded:Connect(function(player)
      player.CharacterAdded:Connect(function(character)
      character:WaitForChild("HumanoidRootPart")
      updateChams()
      end)
      end)
      
      game.Players.PlayerRemoving:Connect(function(player)
      for child, _ in pairs(highlightTable) do
      if child:IsDescendantOf(player.Character) then
      updateChams()
      return
      end
      end
      end)
      updateChams()
      
      ChamsTab:AddToggle('Chams_Toggle', {Text = 'Chams', Default = false}):AddColorPicker("ChamsOutline_ColorValue", {Default = Color3.fromRGB(255,255,255)}):AddColorPicker("ChamsFilled_ColorValue", {Default = Color3.fromRGB(255,0,0)}):OnChanged(function(Chams_Value)
      ESP = Chams_Value
      if Chams_Value then
      updateChams()
      else
      for _, highlight in pairs(highlightTable) do
      highlight:Destroy()
      end
      highlightTable = {}
      end
      end)
      
      Options.ChamsOutline_ColorValue:OnChanged(function(ChamsOutlineColor)
      OutlineColor1 = ChamsOutlineColor
      if ESP then
      for _, highlight in pairs(highlightTable) do
      highlight.OutlineColor = ChamsOutlineColor
      end
      end
      end)
      
      Options.ChamsFilled_ColorValue:OnChanged(function(ChamsFilledColor)
      FillColor1 = ChamsFilledColor
      if ESP then
      for _, highlight in pairs(highlightTable) do
      highlight.FillColor = ChamsFilledColor
      end
      end
      end)
      
      ChamsTab:AddSlider('FillTransparency', {Text = 'Fill Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(FillTransparency_Value)
      FillTransparency = FillTransparency_Value
      if ESP then
      for _, highlight in pairs(highlightTable) do
      highlight.FillTransparency = FillTransparency
      end
      end
      end)
      
      ChamsTab:AddSlider('OutlineTransparency', {Text = 'Outline Transparency', Suffix = "%", Default = 0, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(OutlineTransparency_Value)
      OutlineTransparency = OutlineTransparency_Value
      if ESP then
      for _, highlight in pairs(highlightTable) do
      highlight.OutlineTransparency = OutlineTransparency
      end
      end
      end)
      
      ChamsTab:AddDropdown('DepthMode', {Values = { 'AlwaysOnTop', 'Occluded' }, Default = 1, Multi = false, Text = 'Chams Type:'}):OnChanged(function(value)
      selectedDepthMode = value -- set selected value here
      end)
      
      --
      local VisExtraTabBox = Tabs.VisualsTab:AddRightTabbox('Extra')
      local VisExtraTab = VisExtraTabBox:AddTab('Extra')
      
      --* Visuals Extra *--
      
      VisExtraTab:AddToggle('Inventory_Toggle', {Text = 'Custom Inventory', Default = true}):AddColorPicker("Inventory_Color", {Default = Color3.fromRGB(80,80,80)}):OnChanged(function(Susy1)
      end)
      
      Options.Inventory_Color:OnChanged(function(Inventory_Color_Value)
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot26.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot27.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot28.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot29.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot1.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot2.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot3.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot4.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot5.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot1.Selected.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot2.Selected.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot3.Selected.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot4.Selected.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot5.Selected.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot10.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot11.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot12.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot13.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot14.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot15.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot16.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot17.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot18.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot19.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot20.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot21.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot22.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot23.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot24.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot25.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot6.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot7.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot8.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot9.BackgroundColor3 = Inventory_Color_Value
      game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.SideCategory.ItemInfo.BorderColor3 = Inventory_Color_Value
      end)
      
      VisExtraTab:AddToggle('AWAaSZasanfh', {Text = "Server Status",Default = true,Tooltip = "Hides Fps Watermark",}):OnChanged(function(Chillax2)
      game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerStatus.Visible = Chillax2
      end)
      
      VisExtraTab:AddToggle('AWASZnfh', {Text = "Server Info",Default = true,Tooltip = "Hides Server Info",}):OnChanged(function(Chillax1)
      game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Visible = Chillax1
      end)
      
      local HideChat = false
      
      local function SetChatVisibility()
      game:GetService("Players").LocalPlayer.PlayerGui.UI.Chat.Visible = not HideChat
      end
      SetChatVisibility()
      
      local connection
      VisExtraTab:AddToggle('GnAf', {Text = "Hide Chat",Default = false,Tooltip = "Hides chat ;)",}):OnChanged(function(a)
      HideChat = a
      if HideChat then
      connection = game:GetService("RunService").Heartbeat:Connect(SetChatVisibility)
      else
      if connection then
      connection:Disconnect()
      connection = nil
      end
      SetChatVisibility()
      end
      end)
      
      -------------------------------------------------------------------------------------------------
      --// Functions, Scripts, Other! \\--
      
      local CustomTopText = Drawing.new("Text")
      CustomTopText.Text = "beamed.solutions #Free \n-[beamed]-#9395"
      CustomTopText.Visible = true
      CustomTopText.Transparency = 1
      CustomTopText.Size = 25
      CustomTopText.Outline = true
      CustomTopText.Center = true
      CustomTopText.Font = 3
      CustomTopText.Color = Color3.fromRGB(255, 255, 255)
      CustomTopText.Position = Vector2.new(Camera.ViewportSize.X / 2,0)
      
      for i = 10, 100, 10 do
      if i <= 20 then
      rconsoleprint("\27[31m")
      elseif i <= 40 then
      rconsoleprint("\27[1;31m")
      elseif i <= 60 then
      rconsoleprint("\27[1;33m")
      elseif i <= 80 then
      rconsoleprint("\27[1;93m")
      else
      rconsoleprint("\27[32m")
      end
      rconsoleprint("[*]: Loading %" .. i .. "\n")
      rconsoleprint("\27[0m")
      if i == 100 then
      rconsoleprint("\27[32m")
      rconsoleprint("[*]: Loaded 100%\n")
      rconsoleprint("\27[0m")
      end
      end
      
      -------------------------------------------------------------------------------------------------
      --// UI Settings \\--
      
      local GameID = Tabs.UISettings:AddLeftGroupbox('Game')
      
      local FpsCap = false
      
      GameID:AddToggle('Fps_Toggle', {Text = 'Fps Cap', Default = false}):OnChanged(function(enabled)
      FpsCapEnabled = enabled
      if FpsCapEnabled then
      setfpscap(FpsCapValue)
      else
      setfpscap(999)
      end
      end)
      
      GameID:AddSlider('Fps_Slider', {Text = 'Fps', Suffix = " fps", Default = 60, Min = 60, Max = 999, Rounding = 0, Compact = true}):OnChanged(function(value)
      FpsCapValue = value
      if FpsCapEnabled then
      setfpscap(FpsCapValue)
      end
      end)
      
      GameID:AddInput('GameID_Check', {Default = 'Game ID', Numeric = true, Finished = false, Text = 'Game ID', Placeholder = 'Game ID Here'})
      GameID:AddButton('Join Game', function()
      game:GetService("TeleportService"):Teleport(Options.GameID_Check.Value, plr)
      end)
      
      local MenuGroup = Tabs.UISettings:AddRightGroupbox('Menu')
      
      MenuGroup:AddLabel(""..game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Text.."", true)
      MenuGroup:AddLabel(' Made By:<font color="#de6cff">-[beamed]-#9395</font> 👑', true)
      
      MenuGroup:AddButton('Unload Script', function() Library:Unload()
      for i,v in pairs(Toggles) do
      v:SetValue(false)
      Library:Notify('Unloaded!', 1)
      end
      end)
      
      MenuGroup:AddButton('Panic Button', function()
      for i,v in pairs(Toggles) do
      v:SetValue(false)
      Library:Notify('Panic Button!', 1)
      end
      end)
      
      MenuGroup:AddButton('Rejoin Server', function()
      game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId)
      Library:Notify('Rejoining Server!', 30)
      end)
      
      MenuGroup:AddButton('Copy Join Code', function()
      setclipboard(("game:GetService('TeleportService'):TeleportToPlaceInstance(%s, '%s')"):format(game.PlaceId, game.JobId))
      Library:Notify("Copied Join Code!", 5)
      end)
      
      MenuGroup:AddButton('Copy Discord', function()
      if pcall(setclipboard,"https://discord.gg/WJ5CMYje") then
      Library:Notify('Successfully copied discord link to your clipboard!', 5)
      end
      end)
      
      MenuGroup:AddToggle('WatermarkToggle', {Text = 'Watermark', Default = false, Tooltip = nil, })
      Toggles.WatermarkToggle:OnChanged(function()
      Library:SetWatermark('beamed.solutions - FREE [trident survival]') Library:SetWatermarkVisibility(Toggles.WatermarkToggle.Value)
      end)
      
      MenuGroup:AddToggle('UISettings_KeybindFrameVisibility', {Text = 'Keybind', Default = true}):OnChanged(function()
      Library.KeybindFrame.Visible = Toggles.UISettings_KeybindFrameVisibility.Value
      end)
      
      MenuGroup:AddLabel('Menu Keybind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' })
      Library.ToggleKeybind = Options.MenuKeybind
      
      --// Save manager
      SaveManager:SetLibrary(Library)
      SaveManager:SetFolder('beamed.solutions/folder')
      SaveManager:BuildConfigSection(Tabs.UISettings)
      SaveManager:IgnoreThemeSettings()
      
      --// Theme manager
      ThemeManager:SetLibrary(Library)
      ThemeManager:SetFolder('beamed.solutions/themes')
      ThemeManager:ApplyToTab(Tabs.UISettings)
      
      --Wrapping function - needed to unload(Keep at end of script)
      loadstring(game:HttpGet('https://raw.githubusercontent.com/EIOlmqV6v1owgJBEoqj5lK9p01SFE2THpxcOnvX/LinoriaBurnEdition/main/LoaderManager.lua'))
      
      --// Script Loaded (Time)
      local Time = (string.format("%."..tostring(Decimals).."f", os.clock() - Clock))
      Library:Notify(("Script [Loaded] In - "..tostring(Time).."s"), 15)
      EnabledTarget = true
    else
      EnabledTarget = false
    end
  end
end
end
return target
end

local Sensitivity = 1
local LoopBad = nil
MovementPrediction = true
local AimbotSensitivity = 1
local Mouse = game.Players.LocalPlayer:GetMouse()

local function AimToPosition(Position)
local AimX = ((Position.X - Mouse.X) + 0) / AimbotSensitivity
local AimY = ((Position.Y - Mouse.Y - 36) + 0) / AimbotSensitivity
return AimX, AimY
end

local AimbotEnabled = false
local Key = Enum.UserInputType.MouseButton2
local OldPosition = nil

local function CalculateVelocity(Before, After, deltaTime)
local Displacement = (After - Before)
local Velocity = Displacement / deltaTime
return Velocity
end

local function viewportPoint(ret, ...)
if type(ret) == "boolean" then
local pos, vis = workspace.CurrentCamera:WorldToViewportPoint(...)
return pos
else
return workspace.CurrentCamera:WorldToViewportPoint(ret, ...)
end
end

local PredictionSmoothness = 2
local BoostAim = UIS.MouseDeltaSensitivity
local DefaultUIS = UIS.MouseDeltaSensitivity
local Middle = game.Workspace.Ignore.LocalCharacter.Middle

UIS.InputBegan:Connect(function(input, gameProcessedEvent)
if input.UserInputType == Key then
Aiming = true
LoopBad = runservice.RenderStepped:Connect(function(dt)
if Aiming and AimbotEnabled == true then
local p = nil
if not TargetRN then
  p = GetPlayer()
  if p then
    TargetRN = p
  end
else
  p = TargetRN
end
if not p then return end
if p ~= nil then
  UIS.MouseDeltaSensitivity = BoostAim
  local CurrentPosition = p.HumanoidRootPart.Position
  if OldPosition == nil then
    OldPosition = CurrentPosition
  end

  local Velocity = CalculateVelocity(OldPosition,CurrentPosition,dt)
  local Prediction = Vector3.new(0, 0, 0)
  if MovementPrediction == true then
    if Options.MyDropdown.Value == "Head" then
      Prediction = Velocity * (PredictionSmoothness / 10) * (Middle.Position - p.Head.Position).magnitude / 100
    end
    if Options.MyDropdown.Value == "Torso" then
      Prediction = Velocity * (PredictionSmoothness / 10) * (Middle.Position - p.Torso.Position).magnitude / 100
    end
    if Options.MyDropdown.Value == "HumanoidRootPart" then
      Prediction = Velocity * (PredictionSmoothness / 10) * (Middle.Position - p.HumanoidRootPart.Position).magnitude / 100
    end
  end

  OldPosition = CurrentPosition

  if Options.MyDropdown.Value == "Head" then
    local AimAt = Camera:WorldToViewportPoint(p.Head.Position + Prediction)
    mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
  end
  if Options.MyDropdown.Value == "Torso" then
    AimAt = Camera:WorldToViewportPoint(p.Torso.Position + Prediction)
    mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
  end
  if Options.MyDropdown.Value == "HumanoidRootPart" then
    AimAt = Camera:WorldToViewportPoint(p.HumanoidRootPart.Position + Prediction)
    mousemoverel(AimToPosition(Vector2.new(AimAt.X, AimAt.Y)))
  end
end
end
end)
end
end)

local OldDelta = UIS.MouseDeltaSensitivity

UIS.InputEnded:Connect(function(input, gameProcessedEvent)
if input.UserInputType == Key then
Aiming = false
UIS.MouseDeltaSensitivity = OldDelta
OldPosition = nil
local success, errormessage = pcall(function()
LoopBad:Disconnect()
end)
if not success then
warn(errormessage)
end
UIS.MouseDeltaSensitivity = DefaultUIS
TargetRN = nil
end
end)

AimlockTab:AddToggle('Enabledaz69', {Text = 'Enabled', Default = false}):AddKeyPicker('KeyPicker69', {Default = 'MB2', SyncToggleState = false, Mode = 'Hold', Text = 'Aimbot', NoUI = false,}):OnChanged(function(x)
AimbotEnabled = x
end)

AimlockTab:AddSlider('AimlockSmoothness_Slider', {Text = 'Smoothness', Suffix = "%", Default = 1, Min = 0.1, Max = 10, Rounding = 1, Compact = true}):OnChanged(function(aimbotsmoothnesvalue)
AimbotSensitivity = aimbotsmoothnesvalue
end)

AimlockTab:AddToggle('Prediction', {Text = 'Prediction', Default = false})
Toggles.Prediction:OnChanged(function(BingChillin)
MovementPrediction = BingChillin
end)

AimlockTab:AddSlider('Predictions', {Text = 'Prediction', Suffix = "%", Default = 1.5, Min = 0, Max = 5, Rounding = 1, Compact = true})
Options.Predictions:OnChanged(function(BingChillin)
PredictionSmoothness = BingChillin
end)

AimlockTab:AddDropdown('MyDropdown', {Values = { 'Head','Torso','HumanoidRootPart' }, Default = 1, Multi = false, Text = 'Aimpart'})

--
local VisualsTabBox = Tabs.CombatTab:AddRightTabbox('Fov Circle')
local FovCircleTab = VisualsTabBox:AddTab('Fov Circle')

--* Fov Circle *--

FovCircleTab:AddToggle('FovCirlce_Toggle', {Text = 'Enabled', Default = false}):AddColorPicker("DrawFov_Color", {Default = Color3.fromRGB(255,255,255)}):AddColorPicker("DrawOutlineFov_Color", {Default = Color3.fromRGB(1,1,1)}):OnChanged(function(FovCircle_Toggle)
fovcircle2.Visible = FovCircle_Toggle
fovcircleoutline.Visible = FovCircle_Toggle
end)

Options.DrawFov_Color:OnChanged(function(fovcolorvalue)
fovcircle2.Color = fovcolorvalue
end)

Options.DrawOutlineFov_Color:OnChanged(function(outlinefovcolorvalue)
fovcircleoutline.Color = outlinefovcolorvalue
end)

FovCircleTab:AddToggle('rainbow_FovCircle', {Text = 'Rainbow', Default = false}):OnChanged(function(FovCircle_Rainbow)
if FovCircle_Rainbow == true then
game:GetService('RunService'):BindToRenderStep("Rainbow", 0 , function()
fovcircle2.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end)
elseif FovCircle_Rainbow == false then
game:GetService('RunService'):UnbindFromRenderStep("Rainbow")
fovcircle2.Color = Color3.fromRGB(255,255,255)
end
end)

FovCircleTab:AddToggle('FovCircleFilled_Toggle', {Text = 'Filled', Default = false}):OnChanged(function(FovCircleFilled_Toggle)
fovcircle2.Filled = FovCircleFilled_Toggle
end)

FovCircleTab:AddSlider('FovCircleRadius_Value', {Text = 'Radius', Suffix = "°", Default = 120, Min = 0, Max = 750, Rounding = 0, Compact = true,}):OnChanged(function(FovCircleRadius_Value)
fovcircle2.Radius = FovCircleRadius_Value
fovcircleoutline.Radius = FovCircleRadius_Value
end)

FovCircleTab:AddSlider('FovCircleNumSides_Value', {Text = 'NumSides', Suffix = "px", Default = 64, Min = 1, Max = 64, Rounding = 0, Compact = true,}):OnChanged(function(FovCircleNumSides_Value)
fovcircle2.NumSides = FovCircleNumSides_Value
fovcircleoutline.NumSides = FovCircleNumSides_Value
end)

FovCircleTab:AddSlider('FovCircleTransparency_Value', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true,}):OnChanged(function(FovCircleTransparency_Value)
fovcircle2.Transparency = FovCircleTransparency_Value
fovcircleoutline.Transparency = FovCircleTransparency_Value
end)

local inputConnection

FovCircleTab:AddDropdown('FovCircle_Positon', {Values = { 'To Screen', 'To Mouse', 'To Weapon' }, Default = 1, Multi = false, Text = 'Position'}):OnChanged(function(bool)
if inputConnection then
inputConnection:Disconnect()
end
if bool == "To Screen" then
fovcircle2.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
fovcircleoutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
elseif bool == "To Mouse" then
inputConnection = UserInputService.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement then
local mousePosition = input.Position
local fovOffset = Vector2.new(0, 36) -- adjust the offset as needed
fovcircle2.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
fovcircleoutline.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
elseif bool == "To Weapon" then
-- Weapon goes here
end
end)
end
end)

--
local VisualsTabBox = Tabs.CombatTab:AddLeftTabbox('Crosshair')
local CrosshairXTab = VisualsTabBox:AddTab('Crosshair')

--* Crosshair *--

local CrossHairX, CrossHairXOutline = Drawing.new("Circle"), Drawing.new("Circle")
--
CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
CrossHairX.Thickness = 1
CrossHairX.ZIndex = 3
--
CrossHairXOutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
CrossHairXOutline.Thickness = 4
CrossHairXOutline.ZIndex = 2

do
CrosshairXTab:AddToggle('zCrosshairX_Toggle', {Text = 'Enabled', Default = false}):AddColorPicker("eCrosshairX_Color", {Default = Color3.fromRGB(98, 37, 209)}):AddColorPicker("CrosshairX_OutlineColor", {Default = Color3.fromRGB(0, 0, 0)}):OnChanged(function()
CrossHairX.Visible = Toggles.zCrosshairX_Toggle.Value
CrossHairXOutline.Visible = Toggles.zCrosshairX_Toggle.Value
end)

Options.eCrosshairX_Color:OnChanged(function()
CrossHairX.Color = Options.eCrosshairX_Color.Value
end)

Options.CrosshairX_OutlineColor:OnChanged(function()
CrossHairXOutline.Color = Options.CrosshairX_OutlineColor.Value
end)

CrosshairXTab:AddToggle('Rainbow_Crosshair1', {Text = 'Rainbow', Default = false}):OnChanged(function(rbcrosshair1)
if rbcrosshair1 == true then
game:GetService('RunService'):BindToRenderStep("Rainbow2", 0 , function()
local success, err = pcall(function()
CrossHairX.Color = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end)
end)
elseif rbcrosshair1 == false then
game:GetService('RunService'):UnbindFromRenderStep("Rainbow2")
CrossHairX.Color = Color3.fromRGB(98, 37, 209)
end
end)

CrosshairXTab:AddToggle('Crosshair_Filled1', {Text = 'Filled', Default = false}):OnChanged(function()
CrossHairX.Filled = Toggles.Crosshair_Filled1.Value
end)

CrosshairXTab:AddSlider('Crosshair_Radius', {Text = 'Size', Suffix = "°", Default = 2, Min = 0, Max = 100, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXRadius)
CrossHairX.Radius = CrosshairXRadius
CrossHairXOutline.Radius = CrosshairXRadius
end)

CrosshairXTab:AddSlider('Crosshair_NumSides', {Text = 'NumSides', Suffix = "px", Default = 32, Min = 1, Max = 64, Rounding = 0, Compact = true}):OnChanged(function(CrosshairXNumSides)
CrossHairX.NumSides = CrosshairXNumSides
CrossHairXOutline.NumSides = CrosshairXNumSides
end)

CrosshairXTab:AddSlider('Crosshair_Transparency1', {Text = 'Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function()
CrossHairX.Transparency = Options.Crosshair_Transparency1.Value
CrossHairXOutline.Transparency = Options.Crosshair_Transparency1.Value
end)
end

local inputConnection1

CrosshairXTab:AddDropdown('Crosshair_Positon', {Values = { 'To Screen', 'To Mouse', 'To Weapon' }, Default = 1, Multi = false, Text = 'Position'}):OnChanged(function(bool2)
if inputConnection1 then
inputConnection1:Disconnect()
end
if bool2 == "To Screen" then
CrossHairX.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
CrossHairXOutline.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
elseif bool2 == "To Mouse" then
inputConnection1 = UserInputService.InputChanged:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseMovement then
local mousePosition = input.Position
local fovOffset = Vector2.new(0, 36) -- adjust the offset as needed
CrossHairX.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
CrossHairXOutline.Position = Vector2.new(mousePosition.X, mousePosition.Y) + fovOffset
elseif bool2 == "To Weapon" then
-- Weapon goes here
end
end)
end
end)

--
local ComExtraTabBox = Tabs.CombatTab:AddRightTabbox('Extra')
local ComExtraTab = ComExtraTabBox:AddTab('Extra')

--* Combat Extra *--

ComExtraTab:AddToggle('GameCrosshair_Value', {Text = 'In-Game Crosshair', Default = true}):AddColorPicker("GameCrosshair_Color", {Default = Color3.fromRGB(255,255,255)}):OnChanged(function(GameCrosshair)
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Crosshair.Visible = GameCrosshair
end)

Options.GameCrosshair_Color:OnChanged(function(CrosshairColor_Value)
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Crosshair.BackgroundColor3 = CrosshairColor_Value
end)

ComExtraTab:AddToggle('BloodSplatter', {Text = 'Blood Splatter', Default = true}):OnChanged(function(BloodSplatter_Toggle)
game:GetService("Players").LocalPlayer.PlayerGui.UI.BloodSplatter.Visible = BloodSplatter_Toggle
end)

local SetSwaySpeed = getrenv()._G.NEXT.SetSwaySpeed
local old
local hook = function(self, ...)
local args = {...}
if ComExtraTab:GetToggle('LOPA') then
return 0
else
return 1.2
end
end

old = hookfunction(SetSwaySpeed, hook)

ComExtraTab:AddToggle('LOPA', {Text = "No Sway", Default = false, Tooltip = "Removes sway from Character"}):OnChanged(function(b)
if b then
old = hookfunction(SetSwaySpeed, function() return 0 end)
else
hookfunction(SetSwaySpeed, old)
end
end)

ComExtraTab:AddLabel('Loot All'):AddKeyPicker('gakb', { Default = 'F', SyncToggleState = false, Mode = 'Toggle', Text = 'Loot All', NoUI = false })
Options.gakb:OnClick(function()
for i = 1, 20 do
wait(0.05)
local ohNumber1 = 12
local ohNumber2 = i
local ohBoolean3 = true
game:GetService("Players").LocalPlayer.PlayerGui.RemoteEvent:FireServer(ohNumber1, ohNumber2, ohBoolean3)
end
end)

--------------------------------------------------------------------------------------------------
--// Visuals \\--

--
local VisualsTabBox = Tabs.VisualsTab:AddLeftTabbox('Player Visuals')
local PlayerESPTab = VisualsTabBox:AddTab('Enemies')

local Config = {
Esp = {
Enabled           = false,
MaxDistance       = 1000,
Names             = false,
NamesOutline      = false,
NamesColor        = Color3.fromRGB(255,255,255),
NamesOutlineColor = Color3.fromRGB(0,0,0),
NamesFont         = 2, -- 0,1,2,3
NamesSize         = 11,
Distance          = false,
DistanceOutline   = false,
DistanceColor     = Color3.fromRGB(255,255,255),
DistanceSize      = 11,
DistanceFont      = 2, -- 0,1,2,3
},
}
local c = workspace.CurrentCamera
local function getdistancefc(part)
return (part.Position - c.CFrame.Position).Magnitude
end

function CreateEsp(Player)
local Name,Distance = Drawing.new("Text"),Drawing.new("Text")
local Updater = game:GetService("RunService").RenderStepped:Connect(function()
--
if Aiming and TargetRN and Player:FindFirstChild("Head") and TargetRN:FindFirstChild("Head") then
local playerHeadPos = Player.Head.Position
local targetHeadPos = TargetRN.Head.Position
if playerHeadPos and targetHeadPos and playerHeadPos == targetHeadPos then
if Player:FindFirstChild("Chams") then
  Player.Chams.OutlineColor = Color3.fromRGB(255,0,0)
end
end
else
if Player:FindFirstChild("Chams") then
Player.Chams.OutlineColor = OutlineColor1
end
end
--
if Player:FindFirstChild("Chams") then
if Player.Head.Rotation == Vector3.new(0, 0, -75) or Player.Head.Rotation == Vector3.new(0, 0, 45) or Player.Head.Rotation == Vector3.new(0, 0, -120) then
Player.Chams:Destroy()
end
end
--
if Config.Esp.Enabled and Player ~= nil and Player:FindFirstChild("HumanoidRootPart") ~= nil and Player:FindFirstChild("Head") ~= nil then
local Target2dPosition,IsVisible = workspace.CurrentCamera:WorldToViewportPoint(Player.HumanoidRootPart.Position)
local scale_factor = 1 / (Target2dPosition.Z * math.tan(math.rad(workspace.CurrentCamera.FieldOfView * 0.5)) * 2) * 100
local width, height = math.floor(40 * scale_factor), math.floor(60 * scale_factor)
if Config.Esp.Names then
if Player.Head.Rotation == Vector3.new(0, 0, -75) or Player.Head.Rotation == Vector3.new(0, 0, 45) or Player.Head.Rotation == Vector3.new(0, 0, -120) then
  Name.Visible = IsVisible
  Name.Text = 'Sleeper ['..tostring(math.floor(getdistancefc(Player.HumanoidRootPart)))..']'
  Name.Center = true
  Name.Outline = Config.Esp.NamesOutline
  Name.OutlineColor = Config.Esp.NamesOutlineColor
  Name.Color = Config.Esp.NamesColor
  Name.Position = Vector2.new(Target2dPosition.X,Target2dPosition.Y - height * 0.5 + -15)
  Name.Font = Config.Esp.NamesFont
  Name.Size = Config.Esp.NamesSize
else
  Name.Visible = IsVisible
  Name.Text = "Player"
  Name.Center = true
  Name.Outline = Config.Esp.NamesOutline
  Name.OutlineColor = Config.Esp.NamesOutlineColor
  Name.Position = Vector2.new(Target2dPosition.X,Target2dPosition.Y - height * 0.5 + -15)
  Name.Font = Config.Esp.NamesFont
  Name.Size = Config.Esp.NamesSize
  if Aiming and TargetRN ~= nil then
    if Player:FindFirstChild("Head").Position == TargetRN:FindFirstChild("Head").Position and TargetRN:FindFirstChild("Head").Position ~= nil and Player:FindFirstChild("Head").Position ~= nil then
      Name.Color = Color3.fromRGB(255,0,0)
    end
  else
    Name.Color = Config.Esp.NamesColor
  end
end
else
Name.Visible = false
end
if Config.Esp.Distance then
if Player.Head.Rotation == Vector3.new(0, 0, -75) or Player.Head.Rotation == Vector3.new(0, 0, 45) or Player.Head.Rotation == Vector3.new(0, 0, -120) then
  Distance.Visible = false
else
  Distance.Visible = IsVisible
  Distance.Center = true
  Distance.Outline = Config.Esp.DistanceOutline
  Distance.Font = Config.Esp.DistanceFont
  Distance.Size = Config.Esp.DistanceSize
  Distance.Position = Vector2.new(Target2dPosition.X, Target2dPosition.Y + height / 2 + 5)
  Distance.Text = '['..tostring(math.floor(getdistancefc(Player.HumanoidRootPart)))..']'
  if Aiming and TargetRN ~= nil then
    if Player:FindFirstChild("Head").Position == TargetRN:FindFirstChild("Head").Position and TargetRN:FindFirstChild("Head").Position ~= nil and Player:FindFirstChild("Head").Position ~= nil then
      Distance.Color = Color3.fromRGB(255,0,0)
    end
  else
    Distance.Color = Config.Esp.DistanceColor
  end
end
else
Distance.Visible = false
end
else
Name.Visible = false
Distance.Visible = false
if not Player then
Name:Remove()
Distance:Remove()
Updater:Disconnect()
end
end
end)
end

for _,i in pairs(game:GetService("Workspace"):GetChildren()) do
if i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i.Head:FindFirstChild("Nametag") then
CreateEsp(i)
end
end

game.Workspace.DescendantAdded:Connect(function(i)
if i ~= game.Players.LocalPlayer.Character and i:FindFirstChild("HumanoidRootPart") and i.Head:FindFirstChild("Nametag") then
CreateEsp(i)
end
end)

--* Enemies, Settings (ESP) *--

PlayerESPTab:AddToggle('Enabled69', {Text = 'Enabled', Default = false}):OnChanged(function(EnabledEsp)
Config.Esp.Enabled = EnabledEsp
end)

PlayerESPTab:AddSlider('Esp_Distancce', {Text = 'Distance', Suffix = " studs", Default = 1000, Min = 0, Max = 10000, Rounding = 0, Compact = true}):OnChanged(function(maxdistancevalue)
end)

--* Player *--

PlayerESPTab:AddToggle('t2ta22', {Text = 'Player',Default = false,Tooltip = 'Finds Players', }):AddColorPicker('NameColor', {Default = Color3.new(1,1,1),Title = 'Color',}):OnChanged(function(ESPVALUE)
Config.Esp.Names = ESPVALUE
end)
Options.NameColor:OnChanged(function(Color1)
Config.Esp.NamesColor = Color1
end)

PlayerESPTab:AddToggle('t2a1ta22', {Text = 'Distance',Default = false,Tooltip = 'Distance', }):AddColorPicker('DistanceColor', {Default = Color3.new(1,1,1),Title = 'Color',}):OnChanged(function(ESPVALUE)
Config.Esp.Distance = ESPVALUE
end)
Options.DistanceColor:OnChanged(function(Color69)
Config.Esp.DistanceColor = Color69
end)

PlayerESPTab:AddDivider()

--// Settings \\--

PlayerESPTab:AddToggle('rainbow_esp', {Text = 'Rainbow', Default = false}):OnChanged(function(xpoo12)
if xpoo12 == true then
game:GetService('RunService'):BindToRenderStep("Rainbow", 0 , function()
Config.Esp.NamesColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
Config.Esp.DistanceColor = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end)
elseif xpoo12 == false then
game:GetService('RunService'):UnbindFromRenderStep("Rainbow")
Config.Esp.NamesColor = Color3.fromRGB(255,255,255)
Config.Esp.DistanceColor = Color3.fromRGB(255,255,255)
end
end)

PlayerESPTab:AddToggle('Outlines', {Text = 'Outlines', Default = true}):OnChanged(function(xpoo12)
Config.Esp.NamesOutline = xpoo12
Config.Esp.DistanceOutline = xpoo12
end)

PlayerESPTab:AddSlider('TextSize', {Text = 'Text Size', Suffix = "px", Default = 11, Min = 1, Max = 25, Rounding = 0, Compact = true}):OnChanged(function(namesizevalue)
Config.Esp.NamesSize = namesizevalue
Config.Esp.DistanceSize = namesizevalue
end)

PlayerESPTab:AddDropdown('Font', {Values = { 'UI', 'System', 'Plex', 'Monospace' }, Default = 3, Multi = false, Text = 'Text Fonts:'}):OnChanged(function(bool62)
if bool62 == "UI" then
Config.Esp.NamesFont = 0
Config.Esp.DistanceFont = 0
elseif bool62 == "System" then
Config.Esp.NamesFont = 1
Config.Esp.DistanceFont = 1
elseif bool62 == "Plex" then
Config.Esp.NamesFont = 2
Config.Esp.DistanceFont = 2
elseif bool62 == "Monospace" then
Config.Esp.NamesFont = 3
Config.Esp.DistanceFont = 3
end
end)

--
local ChamsTabBox = Tabs.VisualsTab:AddRightTabbox('Chams')
local ChamsTab = ChamsTabBox:AddTab('Chams')

--* Chams *--

game.Players.PlayerAdded:Connect(function(player)
player.CharacterAdded:Connect(function(character)
character:WaitForChild("HumanoidRootPart")
updateChams()
end)
end)

game.Players.PlayerRemoving:Connect(function(player)
for child, _ in pairs(highlightTable) do
if child:IsDescendantOf(player.Character) then
updateChams()
return
end
end
end)
updateChams()

ChamsTab:AddToggle('Chams_Toggle', {Text = 'Chams', Default = false}):AddColorPicker("ChamsOutline_ColorValue", {Default = Color3.fromRGB(255,255,255)}):AddColorPicker("ChamsFilled_ColorValue", {Default = Color3.fromRGB(255,0,0)}):OnChanged(function(Chams_Value)
ESP = Chams_Value
if Chams_Value then
updateChams()
else
for _, highlight in pairs(highlightTable) do
highlight:Destroy()
end
highlightTable = {}
end
end)

Options.ChamsOutline_ColorValue:OnChanged(function(ChamsOutlineColor)
OutlineColor1 = ChamsOutlineColor
if ESP then
for _, highlight in pairs(highlightTable) do
highlight.OutlineColor = ChamsOutlineColor
end
end
end)

Options.ChamsFilled_ColorValue:OnChanged(function(ChamsFilledColor)
FillColor1 = ChamsFilledColor
if ESP then
for _, highlight in pairs(highlightTable) do
highlight.FillColor = ChamsFilledColor
end
end
end)

ChamsTab:AddSlider('FillTransparency', {Text = 'Fill Transparency', Suffix = "%", Default = 1, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(FillTransparency_Value)
FillTransparency = FillTransparency_Value
if ESP then
for _, highlight in pairs(highlightTable) do
highlight.FillTransparency = FillTransparency
end
end
end)

ChamsTab:AddSlider('OutlineTransparency', {Text = 'Outline Transparency', Suffix = "%", Default = 0, Min = 0, Max = 1, Rounding = 2, Compact = true}):OnChanged(function(OutlineTransparency_Value)
OutlineTransparency = OutlineTransparency_Value
if ESP then
for _, highlight in pairs(highlightTable) do
highlight.OutlineTransparency = OutlineTransparency
end
end
end)

ChamsTab:AddDropdown('DepthMode', {Values = { 'AlwaysOnTop', 'Occluded' }, Default = 1, Multi = false, Text = 'Chams Type:'}):OnChanged(function(value)
selectedDepthMode = value -- set selected value here
end)

--
local VisExtraTabBox = Tabs.VisualsTab:AddRightTabbox('Extra')
local VisExtraTab = VisExtraTabBox:AddTab('Extra')

--* Visuals Extra *--

VisExtraTab:AddToggle('Inventory_Toggle', {Text = 'Custom Inventory', Default = true}):AddColorPicker("Inventory_Color", {Default = Color3.fromRGB(80,80,80)}):OnChanged(function(Susy1)
end)

Options.Inventory_Color:OnChanged(function(Inventory_Color_Value)
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot26.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot27.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot28.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Armor.ItemSlot29.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot1.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot2.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot3.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot4.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot5.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot1.Selected.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot2.Selected.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot3.Selected.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot4.Selected.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Hotbar.ItemSlot5.Selected.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot10.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot11.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot12.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot13.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot14.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot15.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot16.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot17.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot18.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot19.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot20.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot21.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot22.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot23.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot24.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot25.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot6.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot7.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot8.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.Inventory.ItemSlot9.BackgroundColor3 = Inventory_Color_Value
game:GetService("Players").LocalPlayer.PlayerGui.UI.FPS.SideCategory.ItemInfo.BorderColor3 = Inventory_Color_Value
end)

VisExtraTab:AddToggle('AWAaSZasanfh', {Text = "Server Status",Default = true,Tooltip = "Hides Fps Watermark",}):OnChanged(function(Chillax2)
game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerStatus.Visible = Chillax2
end)

VisExtraTab:AddToggle('AWASZnfh', {Text = "Server Info",Default = true,Tooltip = "Hides Server Info",}):OnChanged(function(Chillax1)
game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Visible = Chillax1
end)

local HideChat = false

local function SetChatVisibility()
game:GetService("Players").LocalPlayer.PlayerGui.UI.Chat.Visible = not HideChat
end
SetChatVisibility()

local connection
VisExtraTab:AddToggle('GnAf', {Text = "Hide Chat",Default = false,Tooltip = "Hides chat ;)",}):OnChanged(function(a)
HideChat = a
if HideChat then
connection = game:GetService("RunService").Heartbeat:Connect(SetChatVisibility)
else
if connection then
connection:Disconnect()
connection = nil
end
SetChatVisibility()
end
end)

-------------------------------------------------------------------------------------------------
--// Functions, Scripts, Other! \\--

local CustomTopText = Drawing.new("Text")
CustomTopText.Text = "beamed.solutions #Free \n-[beamed]-#9395"
CustomTopText.Visible = true
CustomTopText.Transparency = 1
CustomTopText.Size = 25
CustomTopText.Outline = true
CustomTopText.Center = true
CustomTopText.Font = 3
CustomTopText.Color = Color3.fromRGB(255, 255, 255)
CustomTopText.Position = Vector2.new(Camera.ViewportSize.X / 2,0)

for i = 10, 100, 10 do
if i <= 20 then
rconsoleprint("\27[31m")
elseif i <= 40 then
rconsoleprint("\27[1;31m")
elseif i <= 60 then
rconsoleprint("\27[1;33m")
elseif i <= 80 then
rconsoleprint("\27[1;93m")
else
rconsoleprint("\27[32m")
end
rconsoleprint("[*]: Loading %" .. i .. "\n")
rconsoleprint("\27[0m")
if i == 100 then
rconsoleprint("\27[32m")
rconsoleprint("[*]: Loaded 100%\n")
rconsoleprint("\27[0m")
end
end

-------------------------------------------------------------------------------------------------
--// UI Settings \\--

local GameID = Tabs.UISettings:AddLeftGroupbox('Game')

local FpsCap = false

GameID:AddToggle('Fps_Toggle', {Text = 'Fps Cap', Default = false}):OnChanged(function(enabled)
FpsCapEnabled = enabled
if FpsCapEnabled then
setfpscap(FpsCapValue)
else
setfpscap(999)
end
end)

GameID:AddSlider('Fps_Slider', {Text = 'Fps', Suffix = " fps", Default = 60, Min = 60, Max = 999, Rounding = 0, Compact = true}):OnChanged(function(value)
FpsCapValue = value
if FpsCapEnabled then
setfpscap(FpsCapValue)
end
end)

GameID:AddInput('GameID_Check', {Default = 'Game ID', Numeric = true, Finished = false, Text = 'Game ID', Placeholder = 'Game ID Here'})
GameID:AddButton('Join Game', function()
game:GetService("TeleportService"):Teleport(Options.GameID_Check.Value, plr)
end)

local MenuGroup = Tabs.UISettings:AddRightGroupbox('Menu')

MenuGroup:AddLabel(""..game:GetService("Players").LocalPlayer.PlayerGui.UI.ServerInfo.Text.."", true)
MenuGroup:AddLabel(' Made By:<font color="#de6cff">-[beamed]-#9395</font> 👑', true)

MenuGroup:AddButton('Unload Script', function() Library:Unload()
for i,v in pairs(Toggles) do
v:SetValue(false)
Library:Notify('Unloaded!', 1)
end
end)

MenuGroup:AddButton('Panic Button', function()
for i,v in pairs(Toggles) do
v:SetValue(false)
Library:Notify('Panic Button!', 1)
end
end)

MenuGroup:AddButton('Rejoin Server', function()
game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId, game.JobId)
Library:Notify('Rejoining Server!', 30)
end)

MenuGroup:AddButton('Copy Join Code', function()
setclipboard(("game:GetService('TeleportService'):TeleportToPlaceInstance(%s, '%s')"):format(game.PlaceId, game.JobId))
Library:Notify("Copied Join Code!", 5)
end)

MenuGroup:AddButton('Copy Discord', function()
if pcall(setclipboard,"https://discord.gg/WJ5CMYje") then
Library:Notify('Successfully copied discord link to your clipboard!', 5)
end
end)

MenuGroup:AddToggle('WatermarkToggle', {Text = 'Watermark', Default = false, Tooltip = nil, })
Toggles.WatermarkToggle:OnChanged(function()
Library:SetWatermark('beamed.solutions - FREE [trident survival]') Library:SetWatermarkVisibility(Toggles.WatermarkToggle.Value)
end)

MenuGroup:AddToggle('UISettings_KeybindFrameVisibility', {Text = 'Keybind', Default = true}):OnChanged(function()
Library.KeybindFrame.Visible = Toggles.UISettings_KeybindFrameVisibility.Value
end)

MenuGroup:AddLabel('Menu Keybind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind

--// Save manager
SaveManager:SetLibrary(Library)
SaveManager:SetFolder('beamed.solutions/folder')
SaveManager:BuildConfigSection(Tabs.UISettings)
SaveManager:IgnoreThemeSettings()

--// Theme manager
ThemeManager:SetLibrary(Library)
ThemeManager:SetFolder('beamed.solutions/themes')
ThemeManager:ApplyToTab(Tabs.UISettings)

--Wrapping function - needed to unload(Keep at end of script)
loadstring(game:HttpGet('https://raw.githubusercontent.com/EIOlmqV6v1owgJBEoqj5lK9p01SFE2THpxcOnvX/LinoriaBurnEdition/main/LoaderManager.lua'))

--// Script Loaded (Time)
local Time = (string.format("%."..tostring(Decimals).."f", os.clock() - Clock))
Library:Notify(("Script [Loaded] In - "..tostring(Time).."s"), 15)
